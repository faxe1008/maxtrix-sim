function _0x2ed5() { var _0x4ec33f = ['182FqtASi', 'Pixel\x20Size:', '9696070JAKAzi', 'map', '150px', '8848616SPovPk', '40sfBTue', 'input', '165492sAWzsB', 'inline-block', '4ifuRLn', 'pixels', '165UeSJQV', '1003356UzthPT', '331463TsomID', '\x20x\x20', '206879lYsctf', 'color', '20px', 'Show\x20outline', 'Secondary\x20Color:', 'keys', 'Highlight\x20Color:', 'margin-top', 'Margin\x20Size:', '2540670YKDgjQ', 'shift', 'RAIN', 'is_drop', '615119ouvQVL', '69HPvAwJ', '11035423KHhrwp', '730914UQACrU', 'Animation:', '5px', '#00FF00', 'width', 'changed', 'value', '#aabdb0', '10px', '58876NzKDbL', '5634xnhIhX', '8983503NFQmuP', 'RANDOM_CIRCLES', 'round', 'FPS:', 'margin-left', '12fzlsmv', '430FNTXRN', 'New\x20matrix\x20size:\x20', 'getTime', '8hMvkLw', 'style', '7265ZVcrvy', 'fading_counter', 'filter', 'Primary\x20Color:', 'push', 'length', 'display', 'SIMPLEX_NOISE', '128313IArZBo', 'Accent\x20Color:']; _0x2ed5 = function () { return _0x4ec33f; }; return _0x2ed5(); } var _0x3cfeb3 = _0x49cc; (function (_0x2812e5, _0x17a650) { var _0x49a3a = _0x49cc, _0x5cf2ca = _0x2812e5(); while (!![]) { try { var _0x4db54b = -parseInt(_0x49a3a(0x17d)) / 0x1 * (parseInt(_0x49a3a(0x19d)) / 0x2) + -parseInt(_0x49a3a(0x18b)) / 0x3 * (-parseInt(_0x49a3a(0x196)) / 0x4) + -parseInt(_0x49a3a(0x1a3)) / 0x5 * (-parseInt(_0x49a3a(0x197)) / 0x6) + parseInt(_0x49a3a(0x18c)) / 0x7 + -parseInt(_0x49a3a(0x1a1)) / 0x8 * (parseInt(_0x49a3a(0x198)) / 0x9) + -parseInt(_0x49a3a(0x19e)) / 0xa * (parseInt(_0x49a3a(0x17b)) / 0xb) + -parseInt(_0x49a3a(0x17a)) / 0xc * (-parseInt(_0x49a3a(0x16d)) / 0xd); if (_0x4db54b === _0x17a650) break; else _0x5cf2ca['push'](_0x5cf2ca['shift']()); } catch (_0x521f10) { _0x5cf2ca['push'](_0x5cf2ca['shift']()); } } }(_0x2ed5, 0xdf57f)); var _0x1107d8 = _0xf9ca; (function (_0x1f4b7f, _0x137efe) { var _0x3ba136 = _0x49cc, _0xa47473 = _0xf9ca, _0x28a6fc = _0x1f4b7f(); while (!![]) { try { var _0x56f8ba = parseInt(_0xa47473(0x7c)) / 0x1 + -parseInt(_0xa47473(0x87)) / 0x2 + -parseInt(_0xa47473(0x79)) / 0x3 * (-parseInt(_0xa47473(0x7a)) / 0x4) + -parseInt(_0xa47473(0x92)) / 0x5 + -parseInt(_0xa47473(0x73)) / 0x6 * (parseInt(_0xa47473(0x68)) / 0x7) + parseInt(_0xa47473(0x8c)) / 0x8 * (parseInt(_0xa47473(0x70)) / 0x9) + parseInt(_0xa47473(0x8d)) / 0xa * (parseInt(_0xa47473(0x8f)) / 0xb); if (_0x56f8ba === _0x137efe) break; else _0x28a6fc[_0x3ba136(0x167)](_0x28a6fc[_0x3ba136(0x187)]()); } catch (_0x564bf3) { _0x28a6fc[_0x3ba136(0x167)](_0x28a6fc[_0x3ba136(0x187)]()); } } }(_0x42ee, 0xf234c)); var primary_color, secondary_color, accent_color, highlight_color, pixel_size_slider, margin_slider, BACKGROUND_COLOR, CANVAS_WIDTH = 0x320, CANVAS_HEIGHT = 0x258, matrix_width, matrix_height, display_stroke_checkbox, matrix_state = { 'pixels': [] }, animation_select; function _0xf9ca(_0x65a9e6, _0x388566) { var _0x5728b8 = _0x42ee(); return _0xf9ca = function (_0x5e1f97, _0xa4f0f7) { _0x5e1f97 = _0x5e1f97 - 0x68; var _0x3f58b3 = _0x5728b8[_0x5e1f97]; return _0x3f58b3; }, _0xf9ca(_0x65a9e6, _0x388566); } const ANIMATIONS = { 'SIMPLEX_NOISE': { 'name': _0x1107d8(0x84), 'func': animate_simplex_noise }, 'RANDOM_CIRCLES': { 'name': _0x1107d8(0x71), 'func': animate_random_circles }, 'RAIN': { 'name': _0x1107d8(0x97), 'func': animate_rain } }; var selected_animation_function = ANIMATIONS[Object[_0x3cfeb3(0x182)](ANIMATIONS)[0x0]][_0x1107d8(0x6d)], animation_did_setup = ![]; function pos_to_index(_0xc6ddad, _0x34aa1e) { return matrix_width * _0x34aa1e + _0xc6ddad; } function get_pixel(_0x1aeedc, _0x50a858) { var _0x8318e5 = _0x1107d8; return matrix_state[_0x8318e5(0x6f)][pos_to_index(_0x1aeedc, _0x50a858)]; } function _0x42ee() { var _0xa29e0 = _0x3cfeb3, _0x5ab482 = [_0xa29e0(0x183), _0xa29e0(0x16c), 'func', '#23261b', _0xa29e0(0x178), _0xa29e0(0x175), _0xa29e0(0x199), _0xa29e0(0x167), '6ROkOog', _0xa29e0(0x171), _0xa29e0(0x195), _0xa29e0(0x19a), _0xa29e0(0x17f), _0xa29e0(0x1a2), _0xa29e0(0x16b), _0xa29e0(0x177), _0xa29e0(0x18f), _0xa29e0(0x18a), _0xa29e0(0x193), _0xa29e0(0x168), _0xa29e0(0x16e), _0xa29e0(0x180), _0xa29e0(0x1a4), 'checked', _0xa29e0(0x194), _0xa29e0(0x16a), _0xa29e0(0x169), 'log', _0xa29e0(0x18d), _0xa29e0(0x190), _0xa29e0(0x185), _0xa29e0(0x17e), _0xa29e0(0x166), _0xa29e0(0x173), _0xa29e0(0x186), _0xa29e0(0x19f), _0xa29e0(0x179), _0xa29e0(0x176), _0xa29e0(0x189), _0xa29e0(0x16f), 'noise3D', _0xa29e0(0x174), 'option', '#000000', _0xa29e0(0x188), _0xa29e0(0x1a0), _0xa29e0(0x191), _0xa29e0(0x172), _0xa29e0(0x19c), _0xa29e0(0x170)]; return _0x42ee = function () { return _0x5ab482; }, _0x42ee(); } function set_pixel_col(_0x29aba6, _0x2bcc64, _0x1faa44) { var _0x3fac39 = _0x3cfeb3; get_pixel(_0x29aba6, _0x2bcc64)[_0x3fac39(0x17e)] = _0x1faa44; } function setup() { var _0x41ad73 = _0x3cfeb3, _0x5ed4c5 = _0x1107d8; CANVAS_WIDTH = windowWidth - 0xa, BACKGROUND_COLOR = color(0x0), createCanvas(CANVAS_WIDTH, CANVAS_HEIGHT), textAlign(CENTER), createSpan(_0x41ad73(0x18e))[_0x5ed4c5(0x78)](_0x41ad73(0x184), _0x5ed4c5(0x77)), animation_select = createSelect()[_0x5ed4c5(0x78)]('margin-left', _0x5ed4c5(0x75)); for (const _0x149493 in ANIMATIONS) { animation_select[_0x5ed4c5(0x95)](_0x149493); } animation_select[_0x41ad73(0x192)](selectedAnimationChanged), createP(), createDiv(_0x5ed4c5(0x7f))[_0x5ed4c5(0x78)](_0x5ed4c5(0x99), '150px')[_0x5ed4c5(0x78)](_0x5ed4c5(0x85), _0x41ad73(0x176)), createDiv(_0x5ed4c5(0x89))['style'](_0x5ed4c5(0x99), _0x5ed4c5(0x74))[_0x5ed4c5(0x78)](_0x5ed4c5(0x85), _0x41ad73(0x176)), createDiv(_0x41ad73(0x19b))[_0x5ed4c5(0x78)](_0x41ad73(0x191), _0x5ed4c5(0x74))[_0x5ed4c5(0x78)](_0x41ad73(0x169), _0x5ed4c5(0x90)), createP(), pixel_size_slider = createSlider(0x2, 0x32, 0xa), pixel_size_slider[_0x5ed4c5(0x78)](_0x5ed4c5(0x99), _0x41ad73(0x171)), pixel_size_slider[_0x41ad73(0x174)](recalculateMatrixSize), margin_slider = createSlider(0x0, 0x1e, 0x5), margin_slider[_0x5ed4c5(0x78)]('width', _0x5ed4c5(0x74)), margin_slider[_0x5ed4c5(0x94)](recalculateMatrixSize), fps_slider = createSlider(0x1, 0x5a, 0x3c), fps_slider[_0x5ed4c5(0x78)](_0x5ed4c5(0x99), _0x5ed4c5(0x74)), fps_slider[_0x41ad73(0x174)](() => { var _0x3c28de = _0x5ed4c5; frameRate(fps_slider[_0x3c28de(0x7d)]()); }), display_stroke_checkbox = createCheckbox(_0x5ed4c5(0x80), ![]), createP(), createSpan(_0x5ed4c5(0x8b)), primary_color = createColorPicker(_0x5ed4c5(0x96))['style']('margin-left', _0x5ed4c5(0x7b)), createSpan(_0x41ad73(0x181))[_0x5ed4c5(0x78)](_0x41ad73(0x19c), _0x41ad73(0x195)), secondary_color = createColorPicker(_0x5ed4c5(0x88))[_0x5ed4c5(0x78)](_0x5ed4c5(0x69), _0x5ed4c5(0x7b)), createSpan(_0x5ed4c5(0x6c))[_0x5ed4c5(0x78)](_0x5ed4c5(0x69), _0x41ad73(0x195)), accent_color = createColorPicker(_0x5ed4c5(0x6e))[_0x5ed4c5(0x78)](_0x5ed4c5(0x69), _0x5ed4c5(0x7b)), createSpan(_0x5ed4c5(0x6b))['style'](_0x5ed4c5(0x69), _0x5ed4c5(0x75)), highlight_color = createColorPicker(_0x5ed4c5(0x83))[_0x41ad73(0x1a2)]('margin-left', _0x5ed4c5(0x7b)), recalculateMatrixSize(), frameRate(0x3c); } function _0x49cc(_0xf8b021, _0x19c272) { var _0x2ed5ba = _0x2ed5(); return _0x49cc = function (_0x49cc8d, _0x132fca) { _0x49cc8d = _0x49cc8d - 0x166; var _0x1c8f94 = _0x2ed5ba[_0x49cc8d]; return _0x1c8f94; }, _0x49cc(_0xf8b021, _0x19c272); } function recalculateMatrixSize() { var _0x2ba5c4 = _0x3cfeb3, _0x4573f8 = _0x1107d8; matrix_width = Math[_0x4573f8(0x76)](CANVAS_WIDTH / (pixel_size_slider[_0x4573f8(0x7d)]() + margin_slider[_0x4573f8(0x7d)]())), matrix_height = Math[_0x4573f8(0x76)](CANVAS_HEIGHT / (pixel_size_slider[_0x4573f8(0x7d)]() + margin_slider[_0x4573f8(0x7d)]())), console[_0x4573f8(0x86)](_0x4573f8(0x8e) + matrix_width + _0x2ba5c4(0x17c) + matrix_height), matrix_state = { 'pixels': [] }; for (var _0x753523 = 0x0; _0x753523 < matrix_width; _0x753523++) { for (var _0x2d9e74 = 0x0; _0x2d9e74 < matrix_height; _0x2d9e74++) { matrix_state[_0x2ba5c4(0x178)][_0x4573f8(0x72)]({ 'color': primary_color[_0x4573f8(0x8a)](), 'index': matrix_width * _0x2d9e74 + _0x753523 }); } } animation_did_setup = ![]; } function selectedAnimationChanged() { var _0x176bf4 = _0x1107d8; recalculateMatrixSize(), selected_animation_function = ANIMATIONS[animation_select[_0x176bf4(0x7d)]()][_0x176bf4(0x6d)]; } function draw() { var _0x5c7ca4 = _0x1107d8; background(BACKGROUND_COLOR); var _0x41ae5a = pixel_size_slider[_0x5c7ca4(0x7d)](), _0x3fa829 = margin_slider[_0x5c7ca4(0x7d)](); display_stroke_checkbox[_0x5c7ca4(0x82)]() ? stroke(0x33) : noStroke(); for (var _0x35fff1 = 0x0; _0x35fff1 < matrix_width; _0x35fff1++) { for (var _0x574413 = 0x0; _0x574413 < matrix_height; _0x574413++) { var _0x18c69f = pos_to_index(_0x35fff1, _0x574413); fill(matrix_state[_0x5c7ca4(0x6f)][_0x18c69f][_0x5c7ca4(0x8a)]); var _0x3dd168 = _0x35fff1 * (_0x41ae5a + _0x3fa829), _0x2e7208 = _0x574413 * (_0x41ae5a + _0x3fa829); rect(_0x3dd168, _0x2e7208, _0x41ae5a, _0x41ae5a); } } selected_animation_function(frameCount, Math[_0x5c7ca4(0x76)](getFrameRate())); } const FADING_MAX = 0xc8, CIRCLE_MAX = 0xa; function animate_random_circles(_0x3ecc8a, _0x499aa4) { var _0x2170d5 = _0x3cfeb3, _0x17906f = _0x1107d8; function _0x1e8d26(_0x5a8360, _0x73b496) { var _0x282f53 = _0xf9ca, _0x283eba = get_pixel(_0x5a8360, _0x73b496); if (!_0x283eba) return; _0x283eba[_0x282f53(0x8a)] = secondary_color[_0x282f53(0x8a)](), _0x283eba['fading_counter'] = FADING_MAX; } if (_0x3ecc8a % 0x3 == 0x0) { var _0x347a2f = Math[_0x17906f(0x76)](random(0x0, matrix_width - 0x1)), _0x18717b = Math[_0x17906f(0x76)](random(0x0, matrix_height - 0x1)), _0x158902 = Math[_0x17906f(0x76)](random(0x1, CIRCLE_MAX)); for (var _0x4587ae = -_0x158902; _0x4587ae <= _0x158902; _0x4587ae++) { for (var _0x56a575 = -_0x158902; _0x56a575 <= _0x158902; _0x56a575++) { if (_0x56a575 * _0x56a575 + _0x4587ae * _0x4587ae <= _0x158902 * _0x158902 + _0x158902 * 0.8) _0x1e8d26(_0x347a2f + _0x56a575, _0x18717b + _0x4587ae); } } } matrix_state['pixels'][_0x2170d5(0x1a5)](_0x155c95 => { var _0x59ecd2 = _0x17906f; return _0x155c95[_0x59ecd2(0x81)] > 0x0; })[_0x17906f(0x6a)](_0x5c0c31 => { var _0x3778db = _0x17906f; _0x5c0c31[_0x3778db(0x8a)] = lerpColor(_0x5c0c31[_0x3778db(0x8a)], primary_color[_0x3778db(0x8a)](), (FADING_MAX - _0x5c0c31[_0x3778db(0x81)]) / FADING_MAX), _0x5c0c31[_0x3778db(0x81)] -= 0x1; }); } const RAIN_FADING_MAX = 0x64; function animate_rain(_0x4a1fa7, _0x52c7a9) { var _0xb11e3 = _0x3cfeb3, _0x9297b1 = _0x1107d8; if (_0x4a1fa7 % 0x2 == 0x0) { var _0xad7fc = Math[_0xb11e3(0x19a)](random(0x5, matrix_width - 0x5)), _0x3adcfb = get_pixel(_0xad7fc, 0x0); _0x3adcfb[_0xb11e3(0x189)] = !![], _0x3adcfb[_0x9297b1(0x8a)] = secondary_color[_0xb11e3(0x17e)](), _0x3adcfb[_0x9297b1(0x81)] = RAIN_FADING_MAX; } for (var _0x4c344d = matrix_state[_0x9297b1(0x6f)][_0xb11e3(0x168)] - 0x1; _0x4c344d >= 0x0; _0x4c344d--) { var _0x3fc241 = matrix_state[_0x9297b1(0x6f)][_0x4c344d]; if (_0x3fc241[_0x9297b1(0x91)]) { _0x3fc241[_0x9297b1(0x91)] = ![]; if (_0x4c344d + matrix_width >= matrix_state[_0x9297b1(0x6f)][_0x9297b1(0x7e)]) continue; var _0x5add9e = matrix_state[_0x9297b1(0x6f)][_0x4c344d + matrix_width]; _0x5add9e[_0x9297b1(0x91)] = !![], _0x5add9e[_0x9297b1(0x8a)] = secondary_color[_0x9297b1(0x8a)](), _0x5add9e[_0xb11e3(0x1a4)] = RAIN_FADING_MAX; } else _0x3fc241[_0x9297b1(0x81)] > 0x0 && (_0x3fc241[_0x9297b1(0x8a)] = lerpColor(_0x3fc241[_0xb11e3(0x17e)], primary_color[_0x9297b1(0x8a)](), (RAIN_FADING_MAX - _0x3fc241[_0x9297b1(0x81)]) / RAIN_FADING_MAX), _0x3fc241[_0x9297b1(0x81)] -= 0x1); } } let noise_gen, time = 0x0, FEATURE_SIZE = 0x4; function animate_simplex_noise(_0x447090, _0x424554) { var _0x2f6630 = _0x3cfeb3, _0x5ad9fd = _0x1107d8; !animation_did_setup && (noise_gen = new SimplexNoise(new Date()[_0x5ad9fd(0x98)]()), animation_did_setup = !![]); for (var _0x27b3ae = 0x0; _0x27b3ae < matrix_width; _0x27b3ae++) { for (var _0x1d1136 = 0x0; _0x1d1136 < matrix_height; _0x1d1136++) { var _0x458c63 = get_pixel(_0x27b3ae, _0x1d1136); let _0x593b7e = lerpColor(primary_color[_0x5ad9fd(0x8a)](), secondary_color[_0x2f6630(0x17e)](), noise_gen[_0x5ad9fd(0x93)](_0x27b3ae / FEATURE_SIZE / 0x4, _0x1d1136 / FEATURE_SIZE / 0x4, time)), _0x19807c = lerpColor(primary_color[_0x2f6630(0x17e)](), secondary_color[_0x5ad9fd(0x8a)](), noise_gen[_0x5ad9fd(0x93)](_0x27b3ae / FEATURE_SIZE / 0x2, _0x1d1136 / FEATURE_SIZE / 0x2, time)), _0xf203ef = lerpColor(primary_color[_0x5ad9fd(0x8a)](), secondary_color[_0x5ad9fd(0x8a)](), noise_gen[_0x5ad9fd(0x93)](_0x27b3ae / FEATURE_SIZE / 0x1, _0x1d1136 / FEATURE_SIZE / 0x1, time)), _0x4c67c5 = red(_0x593b7e) * 0x4 / 0x7 + red(_0x19807c) * 0x2 / 0x7 + red(_0xf203ef) * 0x1 / 0x7, _0x102998 = green(_0x593b7e) * 0x4 / 0x7 + green(_0x19807c) * 0x2 / 0x7 + green(_0xf203ef) * 0x1 / 0x7, _0x57ea74 = blue(_0x593b7e) * 0x4 / 0x7 + blue(_0x19807c) * 0x2 / 0x7 + blue(_0xf203ef) * 0x1 / 0x7; _0x458c63[_0x5ad9fd(0x8a)] = color(_0x4c67c5, _0x102998, _0x57ea74, 0xff); } } time += 0.02; }
